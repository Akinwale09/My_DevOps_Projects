Delivering the shell script based on a real-world requirement.

#!/bin/bash

###############################################################################
# Title: AWS Environment Deployment Script
# Author: Akinwale Idowu
# For: DataWise Solutions
# Description: Automates creation of EC2 instances and S3 buckets for a 
#              Data Science workspace on AWS.
# Concepts Used: Functions, Arrays, Environment Variables, Command Line Args,
#                and Error Handling
###############################################################################

# ============================
# Environment Configuration
# ============================

# Ensure AWS credentials are set as environment variables for security.
# Example: export AWS_ACCESS_KEY_ID="AKIA2ARRMF3OHKJNDIE5"; export AWS_SECRET_ACCESS_KEY="87leYUUYeAZP76xcOiiSaPaa/h9Vj6eEf1LtxRpV"
# Example: export AWS_DEFAULT_REGION="us-east-1"

if [[ -z "$AWS_ACCESS_KEY_ID" || -z "$AWS_SECRET_ACCESS_KEY" || -z "$AWS_DEFAULT_REGION" ]]; then
    echo "‚ùå ERROR: AWS environment variables not set!"
    echo "Please run: export AWS_ACCESS_KEY_ID=AKIA2ARRMF3OHKJNDIE5, AWS_SECRET_ACCESS_KEY=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, AWS_DEFAULT_REGION=us-east-1"
    exit 1
fi


# ============================
# Command Line Arguments
# ============================
# Usage: ./aws_deploy.sh t2.micro mykey datascience-bucket

INSTANCE_TYPE=$1
KEY_NAME=$2
BUCKET_PREFIX=$3

if [[ -z "$INSTANCE_TYPE" || -z "$KEY_NAME" || -z "$BUCKET_PREFIX" ]]; then
    echo "‚öôÔ∏è Usage: $0 <instance_type> <key_pair_name> <s3_bucket_prefix>"
    echo "Example: ./aws_deploy.sh t2.micro mykey datascience-bucket"
    exit 1
fi


# ============================
# Arrays to Track Resources
# ============================
declare -a EC2_INSTANCES
declare -a S3_BUCKETS


# ============================
# Functions Section
# ============================

# --- Function 1: Error Handler ---
handle_error() {
    local exit_code=$1
    local message=$2
    if [[ $exit_code -ne 0 ]]; then
        echo "‚ùå ERROR: $message"
        exit $exit_code
    fi
}


# --- Function 2: Create S3 Bucket ---
create_s3_bucket() {
    local bucket_name="${BUCKET_PREFIX}-$(date +%s)"
    echo "ü™£ Creating S3 bucket: $bucket_name ..."
    
    if [[ "$AWS_DEFAULT_REGION" == "us-east-1" ]]; then
        aws s3api create-bucket --bucket "$bucket_name" > /dev/null 2>&1
    else
        aws s3api create-bucket --bucket "$bucket_name" \
            --region "$AWS_DEFAULT_REGION" \
            --create-bucket-configuration LocationConstraint="$AWS_DEFAULT_REGION" > /dev/null 2>&1
    fi

    handle_error $? "Failed to create S3 bucket."
    S3_BUCKETS+=("$bucket_name")
    echo "‚úÖ S3 bucket created successfully: $bucket_name"
}


# --- Function 3: Create EC2 Instance ---
create_ec2_instance() {
    echo "üöÄ Launching EC2 instance of type: $INSTANCE_TYPE ..."
    
    INSTANCE_ID=$(aws ec2 run-instances \
        --image-id ami-0c02fb55956c7d316 \
        --count 1 \
        --instance-type "$INSTANCE_TYPE" \
        --key-name "$KEY_NAME" \
        --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=DataScience-EC2}]' \
        --query 'Instances[0].InstanceId' \
        --output text 2>/dev/null)
    
    handle_error $? "Failed to create EC2 instance."

    EC2_INSTANCES+=("$INSTANCE_ID")
    echo "‚úÖ EC2 Instance launched successfully: $INSTANCE_ID"
}


# --- Function 4: Verify Resources ---
verify_resources() {
    echo "üîç Verifying created resources..."
    
    echo "üñ•Ô∏è EC2 Instances:"
    for id in "${EC2_INSTANCES[@]}"; do
        aws ec2 describe-instances --instance-ids "$id" --query "Reservations[*].Instances[*].State.Name" --output text
        handle_error $? "Failed to verify EC2 instance: $id"
    done

    echo "üì¶ S3 Buckets:"
    for bucket in "${S3_BUCKETS[@]}"; do
        aws s3 ls "s3://$bucket" > /dev/null 2>&1
        handle_error $? "Failed to verify S3 bucket: $bucket"
        echo "‚úÖ Verified S3 bucket: $bucket"
    done
}


# --- Function 5: Main Deployment Flow ---
deploy_environment() {
    echo "==============================="
    echo "üöÄ Starting AWS Deployment..."
    echo "==============================="

    create_s3_bucket
    create_ec2_instance
    verify_resources

    echo "üéâ Deployment Complete!"
    echo "Resources Created:"
    echo "  EC2 Instances: ${EC2_INSTANCES[@]}"
    echo "  S3 Buckets: ${S3_BUCKETS[@]}"
}

# ============================
# Script Execution
# ============================
deploy_environment
